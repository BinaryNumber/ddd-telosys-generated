/*
 * Generated by Telosys ( https://www.telosys.org/ )
 * 2022-04-12 (15:15:28)
 */

package org.demo.orders.rest.api.impl;

import javax.inject.Inject;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import org.springframework.web.bind.annotation.RestController;

import org.demo.orders.rest.common.AbstractController;
import org.demo.orders.rest.api.ProductRestApi;
import org.demo.orders.rest.dto.ProductRestDto;


import org.demo.orders.application.service.ProductQueryService;
import org.demo.orders.application.service.ProductCommandService;

@RestController
public class ProductRestController extends AbstractController implements ProductRestApi {

 
	@Inject
	private ProductQueryService productQueryService;

	@Inject
	private ProductCommandService productCommandService;


	@Override
	public Response getProduct(String code) {
		return Response.ok(productQueryService.getProduct(code)).build();
	}

	@Override
	public Response findProduct(Integer page, Integer size, String sort, String order) {
		return Response.ok(productQueryService.findProduct(page, size, sort, order)).build();
	}


	@Override
	public Response insertProduct(ProductRestDto productRestDto) {
		ProductRestDto inserted = productCommandService.insertProduct(productRestDto);

		UriBuilder uriBuilder = uriInfo.getAbsolutePathBuilder();

		uriBuilder.path(String.valueOf(inserted.getCode()));
        return Response.created(uriBuilder.build()).build();
	}

	@Override
	public Response updateProduct(String code, ProductRestDto productRestDto) {		
		boolean created = productCommandService.saveProduct(code, productRestDto);
		if (created) {
			return Response.created(uriInfo.getAbsolutePathBuilder().build()).build();
		} else {
			return Response.ok().build();
		}
	}

	@Override
	public Response deleteProduct(String code) {
		productCommandService.deleteProduct(code);
		return Response.ok().build();
	}

}