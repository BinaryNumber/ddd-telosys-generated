/*
 * Generated by Telosys ( https://www.telosys.org/ )
 * 2022-04-12 (15:15:28)
 */

package org.demo.orders.rest.api.impl;

import javax.inject.Inject;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import org.springframework.web.bind.annotation.RestController;

import org.demo.orders.rest.common.AbstractController;
import org.demo.orders.rest.api.OrderRestApi;
import org.demo.orders.rest.dto.OrderRestDto;


import org.demo.orders.application.service.OrderQueryService;
import org.demo.orders.application.service.OrderCommandService;

@RestController
public class OrderRestController extends AbstractController implements OrderRestApi {

 
	@Inject
	private OrderQueryService orderQueryService;

	@Inject
	private OrderCommandService orderCommandService;


	@Override
	public Response getOrder(Integer num) {
		return Response.ok(orderQueryService.getOrder(num)).build();
	}

	@Override
	public Response findOrder(Integer page, Integer size, String sort, String order) {
		return Response.ok(orderQueryService.findOrder(page, size, sort, order)).build();
	}


	@Override
	public Response insertOrder(OrderRestDto orderRestDto) {
		OrderRestDto inserted = orderCommandService.insertOrder(orderRestDto);

		UriBuilder uriBuilder = uriInfo.getAbsolutePathBuilder();

		uriBuilder.path(String.valueOf(inserted.getNum()));
        return Response.created(uriBuilder.build()).build();
	}

	@Override
	public Response updateOrder(Integer num, OrderRestDto orderRestDto) {		
		boolean created = orderCommandService.saveOrder(num, orderRestDto);
		if (created) {
			return Response.created(uriInfo.getAbsolutePathBuilder().build()).build();
		} else {
			return Response.ok().build();
		}
	}

	@Override
	public Response deleteOrder(Integer num) {
		orderCommandService.deleteOrder(num);
		return Response.ok().build();
	}

}