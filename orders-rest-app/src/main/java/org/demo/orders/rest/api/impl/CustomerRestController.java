/*
 * Generated by Telosys ( https://www.telosys.org/ )
 * 2022-04-12 (15:15:28)
 */

package org.demo.orders.rest.api.impl;

import javax.inject.Inject;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import org.springframework.web.bind.annotation.RestController;

import org.demo.orders.rest.common.AbstractController;
import org.demo.orders.rest.api.CustomerRestApi;
import org.demo.orders.rest.dto.CustomerRestDto;


import org.demo.orders.application.service.CustomerQueryService;
import org.demo.orders.application.service.CustomerCommandService;

@RestController
public class CustomerRestController extends AbstractController implements CustomerRestApi {

 
	@Inject
	private CustomerQueryService customerQueryService;

	@Inject
	private CustomerCommandService customerCommandService;


	@Override
	public Response getCustomer(Integer id) {
		return Response.ok(customerQueryService.getCustomer(id)).build();
	}

	@Override
	public Response findCustomer(Integer page, Integer size, String sort, String order) {
		return Response.ok(customerQueryService.findCustomer(page, size, sort, order)).build();
	}


	@Override
	public Response insertCustomer(CustomerRestDto customerRestDto) {
		CustomerRestDto inserted = customerCommandService.insertCustomer(customerRestDto);

		UriBuilder uriBuilder = uriInfo.getAbsolutePathBuilder();

		uriBuilder.path(String.valueOf(inserted.getId()));
        return Response.created(uriBuilder.build()).build();
	}

	@Override
	public Response updateCustomer(Integer id, CustomerRestDto customerRestDto) {		
		boolean created = customerCommandService.saveCustomer(id, customerRestDto);
		if (created) {
			return Response.created(uriInfo.getAbsolutePathBuilder().build()).build();
		} else {
			return Response.ok().build();
		}
	}

	@Override
	public Response deleteCustomer(Integer id) {
		customerCommandService.deleteCustomer(id);
		return Response.ok().build();
	}

}