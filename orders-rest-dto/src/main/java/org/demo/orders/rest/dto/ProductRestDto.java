/*
 * Generated by Telosys ( https://www.telosys.org/ )
 * 2022-04-12 (15:13:48)
 */
package org.demo.orders.rest.dto;

import java.io.Serializable;

import java.math.BigDecimal;

/**
 * REST DTO for entity "Product"
 * 
 * @author Telosys
 *
 */
public class ProductRestDto implements Serializable
{
    private static final long serialVersionUID = 1L;

    private String code; // ID
    private String name; 
    private String description; 
    private BigDecimal unitPrice; 
    private Boolean inStock; 
    private Boolean activeForSale; 
    private Short categoryId; 
    private Short catalogYear; 
    private Short catalogQuarter; 

    //--- Relationships
    private CategoryRestDto category ; 

    /**
     * Default constructor
     */
    public ProductRestDto() {
        super();
    }
    
    /**
     * Set the "code" field value
     * @param code
     */
	public void setCode( String code ) {
        this.code = code ;
    }
    /**
     * Get the "code" field value
     * @return the field value
     */
	public String getCode() {
        return this.code;
    }

    /**
     * Set the "name" field value
     * @param name
     */
	public void setName( String name ) {
        this.name = name ;
    }
    /**
     * Get the "name" field value
     * @return the field value
     */
	public String getName() {
        return this.name;
    }

    /**
     * Set the "description" field value
     * @param description
     */
	public void setDescription( String description ) {
        this.description = description ;
    }
    /**
     * Get the "description" field value
     * @return the field value
     */
	public String getDescription() {
        return this.description;
    }

    /**
     * Set the "unitPrice" field value
     * @param unitPrice
     */
	public void setUnitPrice( BigDecimal unitPrice ) {
        this.unitPrice = unitPrice ;
    }
    /**
     * Get the "unitPrice" field value
     * @return the field value
     */
	public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    /**
     * Set the "inStock" field value
     * @param inStock
     */
	public void setInStock( Boolean inStock ) {
        this.inStock = inStock ;
    }
    /**
     * Get the "inStock" field value
     * @return the field value
     */
	public Boolean getInStock() {
        return this.inStock;
    }

    /**
     * Set the "activeForSale" field value
     * @param activeForSale
     */
	public void setActiveForSale( Boolean activeForSale ) {
        this.activeForSale = activeForSale ;
    }
    /**
     * Get the "activeForSale" field value
     * @return the field value
     */
	public Boolean getActiveForSale() {
        return this.activeForSale;
    }

    /**
     * Set the "categoryId" field value
     * @param categoryId
     */
	public void setCategoryId( Short categoryId ) {
        this.categoryId = categoryId ;
    }
    /**
     * Get the "categoryId" field value
     * @return the field value
     */
	public Short getCategoryId() {
        return this.categoryId;
    }

    /**
     * Set the "catalogYear" field value
     * @param catalogYear
     */
	public void setCatalogYear( Short catalogYear ) {
        this.catalogYear = catalogYear ;
    }
    /**
     * Get the "catalogYear" field value
     * @return the field value
     */
	public Short getCatalogYear() {
        return this.catalogYear;
    }

    /**
     * Set the "catalogQuarter" field value
     * @param catalogQuarter
     */
	public void setCatalogQuarter( Short catalogQuarter ) {
        this.catalogQuarter = catalogQuarter ;
    }
    /**
     * Get the "catalogQuarter" field value
     * @return the field value
     */
	public Short getCatalogQuarter() {
        return this.catalogQuarter;
    }


    //--- Relationships
    public CategoryRestDto getCategory() {
        return this.category;
    } 
    public void setCategory(CategoryRestDto category) {
        this.category = category;
    } 
	

    @Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(code);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(unitPrice);
        sb.append("|");
        sb.append(inStock);
        sb.append("|");
        sb.append(activeForSale);
        sb.append("|");
        sb.append(categoryId);
        sb.append("|");
        sb.append(catalogYear);
        sb.append("|");
        sb.append(catalogQuarter);
        return sb.toString(); 
    } 

}
